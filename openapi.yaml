openapi: 3.0.2
servers:
  - url: https://helloworld-go-blue-a.dev.eticloud.io/v1
    description: Helloworld Dev Environment
info:
  description: |-
    ETI Go Helloworld Petstore - OpenAPI 3.0.

    Some useful links:
    - [Repo](https://wwwin-github.cisco.com/eti/sre-go-helloworld)
    - [API docs](https://wwwin-github.cisco.com/pages/eti/sre-go-helloworld)
  version: v1.0
  title: ETI Helloworld Petstore - OpenAPI 3.0.
  contact:
    email: eti-sre-admins@cisco.com
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://wwwin-github.cisco.com/pages/eti/sre-go-helloworld'
paths:
  /pet:
    get:
      tags:
        - pet
      summary: Get All Pets
      description: Update an existing pet by Id
      operationId: updatePet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      description: Add a new pet to the store
      operationId: addPet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: type
          in: query
          description: Type of pet that needs to be updated
          schema:
            type: string
        - name: family
          in: query
          description: Family of pet that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
externalDocs:
  description: ETI Hello-world API docs
  url: 'https://wwwin-github.cisco.com/pages/eti/sre-go-helloworld'
components:
  schemas:
    Pet:
      x-swagger-router-model: io.swagger.petstore.model.Pet
      required:
        - name
        - type
        - family
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Tex
        type:
          type: string
          example: dog
        family:
          type: string
          example: mammal
      xml:
        name: pet
      type: object
    ApiResponse:
      properties:
        message:
          type: string
      xml:
        name: '##default'
      type: object
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
