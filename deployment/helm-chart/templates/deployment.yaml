apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.servicename }}
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.servicename }}
  template:
    metadata:
      labels:
        app: {{ .Values.servicename }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metricsPort }}"
        prometheus.io/path: "/metrics"
    spec:
      {{- if .Values.microk8s }}
      imagePullSecrets:
      - name: acr-secret
      {{- end }}
      containers:
      - name: {{ .Values.servicename }}
        image: "{{ .Values.docker.GeneralFullImagePreamble }}{{ .Values.dimage }}:{{ .Values.tagversion }}"
        ports:
        - containerPort: {{ .Values.servicePort }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-configmap
        volumeMounts:
            - name: {{ .Release.Name }}-db-info
              readOnly: true
              mountPath: "/etc/dbinfo"
      volumes:
        - name: {{ .Release.Name }}-db-info
          secret:
            secretName: {{ .Release.Name }}-db-info
